#!/bin/bash

# Dependencies:
#   * httpie

# The sourced files has to set these variables:
#   * method
#   * url
#   * headers (optional)
#
# Example url with parameters:
#   url="https://domain?first=${params[0]}"
#
# TODO
#   * Add curl as optional backend? curl -sS $method $url -H "$headers"

usage(){
  echo "Usage:"
  echo "  request -f file -p param"
  echo ""
  echo "Options:"
  echo "  -f file : source one or more files"
  echo "  -p param : one or more params"
  echo "  -o output : see httpie --print for options"
  echo "  -d dry run : just print stuff"
  echo ""
  exit
}

headers=""
output=""
dryRun=false

# Parse options and arguments
while getopts "f:,p:,o:,d" option; do
  case $option in
    "f")
      files+=("$OPTARG")
      ;;
    "p")
      params+=("$OPTARG")
      ;;
    "o")
      output="$output$OPTARG"
      ;;
    "d")
      dryRun=true
      ;;
    *)
      usage
      ;;
  esac
done

if [ "$output" = "" ]; then
  output=hb
fi

# No options were provided or there was a mistake
if [ "$OPTIND" -eq "1" ] || [ "$OPTIND" -le "$#" ]; then
  usage
fi

if [ -f .env ]
then
  export $(cat .env | sed 's/#.*//g' | xargs)
fi

# Source files here
for file in "${files[@]}"; do
  source "$file"
done

# Default output setting
if [[ "$output" = "" ]]; then
  output=hb
fi

arguments=("--print=$output" "$method" "$url")

# Add headers to the arguments array if not empty
if [[ -n "$headers" ]]; then
  arguments+=("$headers")
fi

# Dry run or not
if [ "$dryRun" = true ]; then
  echo "${arguments[@]}"
  echo "$body"
  exit 0
fi

# With or without body
if [[ -n "$body" ]]; then
  # echo "$body" | http "${arguments[@]}"
  http "${arguments[@]}" "$body"
else
  http "${arguments[@]}"
fi
