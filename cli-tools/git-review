#!/usr/bin/env bash

set -euo pipefail

branch=$1

if [ -z "${branch}" ]; then
    echo "Branch is missing"
    exit 1
fi

if [ "$(git status --porcelain)" ]; then
	echo "You already have changes"
	exit 1
fi

git fetch origin "$branch"

# This is to be able to checkout main/master automatically
# https://stackoverflow.com/a/17100946
git remote set-head origin -a
mainBranch="$(git main-branch)"

git fetch origin "$branch"

# TODO: What about moved files? They appear as deleted right now

git checkout "$branch"
git pull
# git pull origin "$branch:$branch"
# git branch -C "$mainBranch" "$branch-review"
# git checkout -b "$branch-review" "$mainBranch"

# git fetch "$(git main-branch)"
# Update master without checking it out
# git pull origin "$mainBranch:$mainBranch" --rebrse
# git branch "$mainBranch" "$branch-review"
git checkout -b "$branch-review" "$mainBranch"
git reset --hard origin/"$mainBranch"

# Merge without commit
git merge origin/"$branch" --no-commit --no-ff

# Unstage changes
git reset

# Show deleted files as diff
git diff --diff-filter=D

# Open editor with populated quickfix
trap 'rm -f "$tmp"' 0 1 2 3 15
tmp=`mktemp -t git-review.XXXXXX` || exit 1

# Exclude deleted files from "list-changes"
git list-changes | grep -v /dev/null:0: > "$tmp"
test -s "$tmp" || exit 0
editor=`git var GIT_EDITOR`
eval "$editor -q $tmp"
